{
    "clientName": "Thunder Client",
    "collectionName": "TODO_LIST_DOCS",
    "collectionId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
    "dateExported": "2024-08-08T01:44:52.782Z",
    "version": "1.2",
    "folders": [],
    "requests": [
        {
            "_id": "2be6fc62-2efb-4ae5-91f3-589e6a594d41",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "Update User Account",
            "url": "http://localhost:5000/user/update",
            "method": "POST",
            "sortNum": 10000,
            "created": "2024-08-04T07:32:50.006Z",
            "modified": "2024-08-08T01:39:35.262Z",
            "headers": [],
            "body": {
                "type": "formencoded",
                "raw": "",
                "form": [
                    {
                        "name": "username",
                        "value": "ahmadLongranger"
                    },
                    {
                        "name": "password",
                        "value": "456"
                    },
                    {
                        "name": "newUsername",
                        "value": "AhmadLongranger"
                    },
                    {
                        "name": "newPassword",
                        "value": "123"
                    }
                ]
            },
            "docs": "This endpoint enables users to update their profile and change their passwords. _**Note: all fields are required. The user is required to login again after a succesful profile update.**_\n\n**Form Data:**\n{\nusername: string,\npassword: string,\nnewUsername: string,\nnewPassword: string\n}\n\n**Failed Response:**\n{\n     status: string('fail'),\n     error: string,\n     message: string\n}"
        },
        {
            "_id": "d2335cb1-1bc2-4b49-b2a5-b55e1632188b",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "User Login",
            "url": "http://localhost:5000/user/login",
            "method": "POST",
            "sortNum": 20000,
            "created": "2024-08-04T07:33:18.405Z",
            "modified": "2024-08-06T13:37:58.068Z",
            "headers": [],
            "body": {
                "type": "formencoded",
                "raw": "",
                "form": [
                    {
                        "name": "username",
                        "value": "AhmadLongranger"
                    },
                    {
                        "name": "password",
                        "value": "123"
                    }
                ]
            },
            "docs": "This endpoint is used to authenticate an log users into the application.\nIt takes the following form data: \n\n{\nusername: string\npassword: string\n}\n\nAnd it returns the following on successful authentication:\n\n{\n  status: string(success)\n  tasks: [\n    {\n      _id: hexstring\n      user: hexstring (userID),\n      title: string\n      status: string ('in-progress', 'done')\n      createdAt: date\n      updatedAt: date\n    }\n  ]\n}\n\nAn unsuccessful registration will return:\n{\nstatus: string ('fail')\nmessage: string ('Incorrect username or password.')\n}"
        },
        {
            "_id": "52a72095-57b9-4ad8-9aa2-92e6c5a14fb4",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "Search and Filter Tasks",
            "url": "http://localhost:5000/user/filterTasks?page=0&tasksperpage",
            "method": "POST",
            "sortNum": 30000,
            "created": "2024-08-04T07:33:59.163Z",
            "modified": "2024-08-08T00:53:26.962Z",
            "headers": [],
            "params": [
                {
                    "name": "page",
                    "value": "0",
                    "isPath": false
                },
                {
                    "name": "tasksperpage",
                    "value": "",
                    "isPath": false
                }
            ],
            "body": {
                "type": "formencoded",
                "raw": "",
                "form": [
                    {
                        "name": "title",
                        "value": "documentation"
                    },
                    {
                        "name": "status",
                        "value": "in-progress",
                        "isDisabled": true
                    }
                ]
            },
            "docs": "Allows a user to find tasks of interest by providing the title or the status associated with that task(s). Additional parametres such as the _tasksperpage_ and _page_, may be provided by the user to suit the response limit. **Note: if  _tasksperpage_ and _page_ are not provided the application will use a default of  _tasksperpage_ = 3 and _page_ = 0**\n\nform body:\n{\ntitle: string\nstatus: string\n}\n\nquery parametres:\n\n{\ntasksperpage: number\npage: number\n}\n\n**Success Response**:\n\n{\n  \"status\": string (success),\n  \"message\": string,\n  \"results\": [\n    {\n      \"_id\": hex string,\n      \"user\": hex string,\n      \"title\": string,\n      \"status\": string ('in-progress', 'pending', 'done', 'not started'),\n      \"createdAt\": date,\n      \"updatedAt\": date\n    }\n  ]\n}\n\n**Failed Response:**\n{\n     status: string('fail'),\n     error: string,\n     message: string\n}"
        },
        {
            "_id": "39d49e16-32ba-4bff-bb3a-b26eac33c6c4",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "Create Tasks",
            "url": "http://localhost:5000/user/createTask",
            "method": "POST",
            "sortNum": 40000,
            "created": "2024-08-04T07:34:40.284Z",
            "modified": "2024-08-08T01:25:18.230Z",
            "headers": [],
            "body": {
                "type": "formencoded",
                "raw": "",
                "form": [
                    {
                        "name": "title",
                        "value": "testing"
                    },
                    {
                        "name": "status",
                        "value": "not started"
                    }
                ]
            },
            "docs": "This enables users to create a new task. _**Note: if the status of the task to be created is not provided the application will give it a default of \"in-progress\"**_\n\n**form body:**\n\n{\ntitle: string,\nstatus: string\n}\n\n**Success Response:**\n{ \n\"_id\": hex string, \n\"user\": hex string, \n\"title\": string, \n\"status\": string ('in-progress', 'pending', 'done', 'not started'), \n\"createdAt\": date, \n\"updatedAt\": date \n}\n\n**Failed Response:**\n{\n     status: string('fail'),\n     error: string,\n     message: string\n}"
        },
        {
            "_id": "89ca6eff-37b2-4b25-b26f-87fa6b560c11",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "Create User Account",
            "url": "http://localhost:5000/user/create",
            "method": "POST",
            "sortNum": 50000,
            "created": "2024-08-04T07:35:06.640Z",
            "modified": "2024-08-04T07:55:53.585Z",
            "headers": [],
            "body": {
                "type": "formencoded",
                "raw": "",
                "form": [
                    {
                        "name": "username",
                        "value": "memy"
                    },
                    {
                        "name": "password",
                        "value": "123"
                    }
                ]
            },
            "docs": "This endpoint registers a new user account. It takes a _username_ and a _password_:\n\nreq.body = {\nusername: string,\npassword: string\n}\n\nIt responds with an object of the following schema:\n\n{\nstatus: string( success | fail ),\nmessage: string,\ndata ( if registration is successful ) : {\nusername: string,\n_id: hex string,\ncreatedAt: date,\nupdatedAt: date\n}\nerror (if registration is unsuccessful): {}\n}\n\n\n\n"
        },
        {
            "_id": "9d72d573-b197-4c5f-87ee-5d76f4ab663f",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "Delete User Account",
            "url": "http://localhost:5000/user/delete",
            "method": "GET",
            "sortNum": 60000,
            "created": "2024-08-04T07:35:28.832Z",
            "modified": "2024-08-08T01:27:40.573Z",
            "headers": [],
            "docs": "This endpoint  logs out the user and destroys the user account document."
        },
        {
            "_id": "c16326da-5023-4156-ba89-d88abbdb6ca7",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "User Logout",
            "url": "http://localhost:5000/user/logout",
            "method": "GET",
            "sortNum": 70000,
            "created": "2024-08-04T07:35:59.908Z",
            "modified": "2024-08-08T00:35:49.563Z",
            "headers": [],
            "docs": "This route logs out the user and destroys the session. *Note: there is no data required by the user.*"
        },
        {
            "_id": "0e4aa6bb-cebc-4b83-87ad-80b7a89c2113",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "View Tasks",
            "url": "http://localhost:5000/user/tasks",
            "method": "GET",
            "sortNum": 80000,
            "created": "2024-08-04T07:57:25.081Z",
            "modified": "2024-08-08T01:29:37.303Z",
            "headers": [],
            "docs": "This endpoint enables users to view all of their tasks.\n\n **Success Response**:\n\n{\n  \"status\": string (success),\n  \"message\": string,\n  \"tasks\": [\n    {\n      \"_id\": hex string,\n      \"user\": hex string,\n      \"title\": string,\n      \"status\": string ('in-progress', 'pending', 'done', 'not started'),\n      \"createdAt\": date,\n      \"updatedAt\": date\n    }\n  ]\n}\n\n**Failed Response:**\n{\n     status: string('fail'),\n     error: string,\n     message: string\n}"
        },
        {
            "_id": "ecea00a8-4018-450a-b21a-d3d26b16655f",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "Update Task",
            "url": "http://localhost:5000/user/updateTask?title=testing&updateTitle=Fixed&status=done",
            "method": "POST",
            "sortNum": 90000,
            "created": "2024-08-04T17:08:57.684Z",
            "modified": "2024-08-08T01:18:53.513Z",
            "headers": [],
            "params": [
                {
                    "name": "title",
                    "value": "testing",
                    "isPath": false
                },
                {
                    "name": "updateTitle",
                    "value": "Fixed",
                    "isPath": false
                },
                {
                    "name": "status",
                    "value": "done",
                    "isPath": false
                }
            ],
            "body": {
                "type": "formencoded",
                "raw": "",
                "form": [
                    {
                        "name": "title",
                        "value": "logical Error",
                        "isDisabled": true
                    }
                ]
            },
            "docs": "This endpoint enables users to update a task's title or status. _**Note: all parameteres are required and if only one field is desired to be updated (e.g title), then the current value of the other field should be provided. Not providing a value for a field will result in clearing the current value and setting the field to \"\". Future updates will use form data instead of query parameters**_\n\n**Parameters:**\n{\ntitle: string,\nupdateTitle: string,\nstatus: string\n}\n\n**Success Response**:\n\n{\n  \"status\": string (success),\n  \"message\": string,\n  \"tasks\": [\n    {\n      \"_id\": hex string,\n      \"user\": hex string,\n      \"title\": string,\n      \"status\": string ('in-progress', 'pending', 'done', 'not started'),\n      \"createdAt\": date,\n      \"updatedAt\": date\n    }\n  ]\n}\n\n**Failed Response:**\n{\n     status: string('fail'),\n     error: string,\n     message: string\n}"
        },
        {
            "_id": "6250caae-0dd6-4a2d-9f66-b49526b4ef22",
            "colId": "c84ef1cf-2957-44b9-b8c1-661f9e31dbc8",
            "containerId": "",
            "name": "Delete Task",
            "url": "http://localhost:5000/user/deleteTask?title=Fixed",
            "method": "GET",
            "sortNum": 100000,
            "created": "2024-08-06T13:24:27.392Z",
            "modified": "2024-08-08T01:24:32.664Z",
            "headers": [],
            "params": [
                {
                    "name": "title",
                    "value": "Fixed",
                    "isPath": false
                }
            ],
            "docs": "This endpoint enables users to delete tasks by providing the title. _**Note: if there are multiple documents with the same title, the application will delete the first instance of that document.**_\n\n**Parameters:**\n{\ntitle: string\n}\n\n**Success Response**:\n\n{\n  \"status\": string (success),\n  \"message\": string,\n  \"tasks\": [\n    {\n      \"_id\": hex string,\n      \"user\": hex string,\n      \"title\": string,\n      \"status\": string ('in-progress', 'pending', 'done', 'not started'),\n      \"createdAt\": date,\n      \"updatedAt\": date\n    }\n  ]\n}\n\n**Failed Response:**\n{\n     status: string('fail'),\n     error: string,\n     message: string\n}"
        }
    ],
    "settings": {
        "docs": "**DOCUMENTATION FOR THE _\"BIZZTODO\"_  TODO APP**"
    },
    "ref": "6w8EhjRCNn3QRMBBo7jJmIXuyPdYihTJCK7A68MANJB8uTWTTpx6xWKOVl9Q2n3THnH4s0FOKWCnXY6R4yh1iQ"
}